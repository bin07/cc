第五天
数据与备份与恢复
数据完全备份与恢复 mysqldump/mysql
数据增量备份与恢复 binlog日志 /inobackupex

数据备份方式
冷备份:cp tar ....
逻辑备份:mysqldump  mysql
50]#cp -r /var/lib/myspl /root/mysqlall.bak
50]#scp -r /root/mysqlall.bak  192.168.4.51:/root
51]#systemctl stop mysql
51]# rm -rf /var/lib/mysql
51]#cp -r /root/mysqlall.bak /var/lib/mysql
51]#chown -R mysql:mysql /var/lib/mysql
51]#systemctl start mysql
51]#mysql -uroot -p123456
mysql> show databases;


数据备份策略
完全备份 备份所有数据 
增量备份 备份上次备份后的，所有新产生的数据
差异备份 备份完备后，所有新产生的数据

生产线上一般的用法
完全备份+差异备份
完全备份+增量备份

###############################################################
逻辑备份
逻辑备份及恢复
# mysqldump -uroot -p123456 -A > /root/alldb.aql    备份所有数据到alldb.aql
# mysqldump -uroot -p123456 db4.t1 > /mydata/db4.aql      备份db4库t1表
# mysqldump -uroot -p123456 -B db3 db4 > /mydata/db3.aql -B  备份多个库
完全恢复
#myql -uroot -p123456 库名 < /路径/xxx.aql
mysql> drop database db4;
# mysql -uroot -p123456  db4 < /mydata/db4.aql 恢复db4库从 /mydata/db4.aql路径下恢复

############################################
使用日志恢复
方法1：启用binlog日志实现数据时时增量备份与恢复
掌握binlog日志的使用：binlog日志介绍
1启用日志文件  2查看日志文件内容  3删除所有的文件  4手动创建日志文件 
#systemctl stop mysqld
#vim /etc/my.cnf

[mysqld]
server_id=50             1-255都行一般主机什么ip就写什么好记
binlog_format="mixed"
命令和日志都记录 statement 记录命令到binlog日志中    row 记录结果到日志里
log_bin=/logdir/plj              指定下文件存储的位置

# chown mysql /logdir/             给个权限
# systemctl restart mysqld
# ls /logdir/
plj.000001  plj.index             日志文件  索引文件

操作数据库
#mysqlbinlog /logdir/plj.000001 | grep -i insert(update、dalete)都能看见时时记录
#mysql -uroot -p123456 -e "flush logs"   刷新日志文件 刷新一次多一个文件
#mysqldump -uroot -p123456 --flush-logs db4 t2 > /mydata/db4_t2.sql
                                        刷新在备份 生成新的文件
#################################################################3
清理文件
mysql> purge master logs to "plj.000004"; 删除4以前的文件
mysql> show master status;                显示当前正在使用的日志文件
mysql> reset master;                      重制日志文件
mysql> flush-logs;                        手动创建日志文件

## mysqlbinlog ooo.000001 
以时间点恢复数据
# mysqlbinlog  --start-datetime="2018-11-21 15:22:42" --stop-datetime="2018-11-21 15:22:43"  ooo.000001  | mysql -uroot -p123456

偏移量恢复数据
## mysqlbinlog --start-position=554 --stop-position=756   ooo.000001 | mysql -uroot -p123456

# mysqlbinlog --stop-position=756   ooo.000001 | mysql -uroot -p123456
不写开始从0开始

#####################################################################
方法2：安装第3方软件提供innobackupex命令实现数据的增量备份与恢复

完全备份与恢复
innobackuppex + 选项
--host 主机名
--port 3306
--user 用户名
--password 密码
--databases="库名"  不写默认全部备份
--databases="库1 库2"
--databases="库.表"
--no-timestamp 不用日期命名备份文件存储的子目录，使用备份的数据库名做备份目录名
--no-timestmap 不使用日期命名备份目录名
______________________________________________________________________
# innobackupex --user=root --password=123456 /backup/mysql --no-timestamp
# ls /backup/mysql/
backup-my.cnf   mysql                   xtrabackup_checkpoints
db5             performance_schema      xtrabackup_info
ib_buffer_pool  sys                     xtrabackup_logfile
ibdata1         xtrabackup_binlog_info

完全恢复
1：准备恢复数据
#innobackupex --user=root --password=123456 --apply-log /backup/mysql 
#systemctl stop mysqld
#rm -rf /var/lib/mysql
#mkdir /var/lib/mysql
2：cp备份文件到数据库目录下
#innobackupex --user=root --password=123456 --copy-back /backup/mysql
3：修改文件所有者和组用户为mysql
#chown -R mysql:mysql  /var/lib/mysql
4：启动数据库服务
#systemctl start mysql
_______________________________________________________

增量备份与恢复
增量备份
周一 首先做完全备份 （第1次备份 时要把所有数据全备份）
]# innobackupex --user root --password 123456  /fullbak  
--no-timestamp

周二 向表里写新数据，做增量备份
]# innobackupex --user root --password 123456  
--incremental /new1dir --incremental-basedir=/fullbak  
--no-timestamp

周三 向表里写新数据，做增量备份
]# innobackupex --user root --password 123456 
--incremental /new2dir  --incremental-basedir=/new1dir  
--no-timestamp

innodb 事务日志文件
lsn  日志序列号  
]# cat /fullbak/xtrabackup_checkpoints
]# cat /new1dir/xtrabackup_checkpoints
]# cat /new2dir/xtrabackup_checkpoints

增量恢复 15分钟  到 10：54
]# systemctl  stop mysqld
]# rm  -rf /var/lib/mysql
]# mkdir /var/lib/mysql
1 准备恢复数据
]# innobackupex  --apply-log --redo-only /fullbak 
2 合并日志文件
]# innobackupex --apply-log --redo-only /fullbak  
--incremental-dir=/new1dir

]# innobackupex --apply-log --redo-only /fullbak  
--incremental-dir=/new2dir
3 把备份目录下数据拷贝到数据库目录下
]# innobackupex  --copy-back /fullbak
4 修改数据库目录的所有者和组用户为mysql
]# chown  -R  mysql:mysql /var/lib/mysql

5 启动数据库服务 ]# systemctl  start mysqld


恢复完全备份中的单个表

对db5库做完全备份
]# innobackupex  --user root  --password 123456    
--databases="db5" /db5bak --no-timestamp

查看备份信息  ]# ls /db5bak

删除db5库里的b 表
mysql> drop table  db5.b;

没有了对应的表文件
]# ls /var/lib/mysql/db5/b.*

+++++++++++++++++++++++
使用备份文件恢复删除的b表
创建删除的 b表
mysql> create  table  db5.b( name char(10) );
mysql> system  ls /var/lib/mysql/db5/b.*
删除b表的表空间文件
mysql> alter  table db5.b  discard  tablespace; 
mysql> system  ls /var/lib/mysql/db5/b.*
导出表信息
]# innobackupex  --user root  --password 123456  
--apply-log --export /db5bak
把导出的表信息文件拷贝的数据库目录下
]# cd /db5bak/db5/
]# cp b.{cfg,exp,ibd} /var/lib/mysql/db5/
]# chown mysql:mysql /var/lib/mysql/db5/*
导入表空间
mysql> alter  table db5.b  import  tablespace;
mysql> select  * from  db5.b;
mysql> system  rm  -rf  /var/lib/mysql/db5/b.cfg
mysql> system  rm  -rf  /var/lib/mysql/db5/b.exp







































